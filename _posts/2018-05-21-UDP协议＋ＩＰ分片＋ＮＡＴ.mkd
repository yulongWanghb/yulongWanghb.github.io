---
layout:     post
title:      UDP协议
date:       2018-05-21
author:     WYL
catalogL:   true
tags:
    -   通信协议
    -   不可靠连接
---

#   UDP协议：用户数据报协议（User Datagrame Protocal）,正式规范[RFC768](https://tools.ietf.org/html/rfc768)

##  特点

1. `无连接`：不需要像TCP一样先建立连接，直接发送数据，可以**一对多或者一对一**
2. `不可靠交付`：不需要连接直接交付无法保证数据包发送之后的状态，也就不需要维持像TCP链接一样的复杂的设备状态
3. `没有拥塞控制`：不需要考虑接收端的状态，只管发数据
4. `数据报文简单`：UDP只在应用程序提交的报文总添加首部就直接交给IP层，UDP首部只有8个字节，IP层收到UDP报文就直接拆分根据UDP首部的目的端口发送数据

##  UDP数据报文格式   

  ！[UDP数据报文格式]https://img-blog.csdn.net/20160313152631284)  

1.  源端口、目的端口 ：对应的应用程序端口
2.  长度：整个UDP数据报文的长度，最小为8字节（UDP首部为8字节）
3.  首部校验和：UDP的校验和是可选的，在IP报文的校验中就已经做了对整个数据进行校验，UDP校验和是端到端进行校验，如果校验有差错就应该把这个数据包丢弃，并且不能产生差错报文
4.  伪首部源IP、目标IP：通过这个进行发送
5.  UDP长度：记录整个UDP数据长度，这个可以作为IP数据报文校验

---

#   IP分片
1.  分片原因：物理网络层要限制每次发送数据帧的最大长度，IP发送数据时候通过选路（可以理解为路由转发接口），查询借口获得MTU（最大通信单元（byte）），超过长度的要进行分片，这一过程可以在发送主机上也可以在路由上，重新组装由目的IP层进行，已经分片的数据可能会不断地进行分片
2.  分片操作：IP数据报文中的标示字段在分片时候被复制到每个分片中，目的端IP将会重组这些信息，数据被分片后独立传输，一个分片出错，整个数据报文就得重发,但是**UDP没有超时重传协议**，如果数据实在中间路由被分片，发送端就不知道该重发什么数据，所以要避免 分片
3.  关于IP首部，详情查看=>[IP数据报文首部详解](https://blog.csdn.net/jhg1204/article/details/41624169),这个已经说明的比较清楚了，直接参考这个就可以了   

---

#   TCP与ＵＤＰ的比较
１．  ＴＣＰ是**面向字节流**的协议，信息可以以分组的消息发送应用信息，每个分组都有序号，丢失还要重发
２．  ＵＤＰ是**简单、无状态协议**,适合作为其他上层应用协议的辅助

---

#   NAT （网络地址转换器）

1.  作用：允许一个整体机构以一个公网IP出现在网络上，用于映射本地ＩＰ和端口到外网的ＩＰ和端口（将内部私有网络地址转换为公用的），解决外网ＩＰ不够用的情况
2.   保留ＩＰ字段：分配了３个网段给私有网络使用，这段网段不允许给外网使用
>   1.  10.0.0.0~10.255.255.255  （巨型公司使用，貌似虚拟机的IP分配就是这个）
>   2.  172.16.0.0~172.31.255.255（常用公司使用，适用于一定规模的公司）
>   3.  192.168.0.0~192.168.255.255（常用路由器地址分配，适用于家庭网络）
3.  类型分类：
>   1.  静态NAT：IP地址一对一，这个转换是不变的，一般用于*外部对内网中某些特定设备*的访问
>   2.  动态NAT: 内外网的ＩＰ地址对是随机的，只需要制定可以合法的内部地址和外部地址，就可以采用这种方式。适用于*外网ＩＰ少于内网计算机数量*的时候
>   3.  网络地址转换ＮＡＰＴ：把内部网络映射到外网上的不同端口上，内部网络的所有主机均可以共享一个合法的ＩＰ地址实现对网络的访问，又可以隐藏网络内部的所有主机，有效的避免internet 的攻击
3.   功能：
>   1.  数据伪装：内网数据包中的地址信息可以修改成统一的对外地址，屏蔽内部主机，保证内网的安全
>   2.  端口转发：外网访问内网（或者内网提供服务的时候），将外部的数据包通过端口转发，讲数据包转发给主机
>   3.  负载平衡：重定向服务器连接（备用服务器的快速上线？）
4.  地址转换原理：     
　　转换原理　详情点击＝》[NAT转换原理](https://blog.csdn.net/hzhsan/article/details/45038265)

# NAT 地址穿透      
　　　　穿透技术详见下章节
   
